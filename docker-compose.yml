services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CLUSTER_ID: "<сгенерированный_UUID>"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true" 
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_CFG_NUM_PARTITIONS: "1" 
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5


  postgres:
    image: bitnami/postgresql:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USERNAME: flowerize
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_DATABASE: order_db
    volumes:
      - postgres_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flowerize"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  go-service:
    ports:
      - "8080:8080"
    build: .
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy



volumes:
  postgres_data:


